#!/usr/bin/env pytest

import parsoc
import json
import os

DIR = os.path.dirname(os.path.realpath(__file__))


def test_can_parse_document_1():
    resource = os.path.join(DIR, "documents/1.docx")

    document = parsoc.Document(resource)
    structure = parsoc.parse_document(document)

    assert structure.keys() == {"tables", "paragraphs", "properties"}
    assert structure["tables"] == [
        [
            ["Title", "CEO", "Date business commenced", "2000-01-01"],
            ["Company name", "Euronext Paris MB", " Sole proprietorship", ""],
            ["Phone | Fax", "+33 1 70 48 24 00", " Partnership", ""],
            ["E-mail", "ceo@euronext.fr", " Corporation", ""],
            [
                "Registered company address\nCity, State ZIP Code",
                "14 Place des Reflets, 92400 Courbevoie",
                " Other",
                "",
            ],
        ],
        [
            [
                "City, State ZIP Code",
                "14 Place des Reflets, 92400 Courbevoie",
                "Bank name:",
                "EURONEXT",
            ],
            [
                "How long at current address?",
                "20 years",
                "Primary business address\nCity, State ZIP Code",
                "14 Place des Reflets, 92400 Courbevoie",
            ],
            ["Phone", "+33 1 70 48 24 01", "Phone", "+33 1 70 48 24 03"],
            ["Fax", "+33 1 70 48 24 02", "Account number", "1000"],
            [
                "E-mail",
                "credit@euronext.fr",
                "Type of account",
                "Savings  Checking  Other",
            ],
        ],
        [
            ["Company name", "EURONEXT 2", "Phone", "+33 1 70 48 25 00"],
            ["Address", "12 Place des Reflets", "Fax", "+33 1 70 48 25 01"],
            [
                "City, State ZIP Code",
                "92400 Courbevoie",
                "E-mail",
                "credit@euronext2.fr",
            ],
            ["Type of account", "Stock Exchange", "Other", "-"],
            ["Company name", "", "Phone", ""],
            ["Address", "", "Fax", ""],
            ["City, State ZIP Code", "", "E-mail", ""],
            ["Type of account", "", "Other", ""],
            ["Company name", "", "Phone", ""],
            ["Address", "", "Fax", ""],
            ["City, State ZIP Code", "", "E-mail", ""],
            ["Type of account", "Savings  Checking  Other", "Other", ""],
        ],
        [
            ["Signature", "", "Signature", ""],
            [
                "Name and Title",
                "Jean Dupont, Boss",
                "Name and Title",
                "Pierre Dubois, Sales",
            ],
            ["Date", "2020-07-07", "Date", "2020-07-07"],
        ],
    ]
    assert structure["properties"] == {
        "author": "Laurel Yan",
        "category": "",
        "comments": "",
        "content_status": "",
        "created": 1452833880.0,
        "identifier": "",
        "keywords": "",
        "language": "en-US",
        "last_modified_by": "",
        "last_printed": None,
        "modified": 1562945266.0,
        "revision": 5,
        "subject": "",
        "title": "",
        "version": "",
    }
    assert structure["paragraphs"] == [
        "",
        "Credit Application Form",
        "BUSINESS CONTACT INFORMATION",
        "BUSINESS AND CREDIT INFORMATION",
        "BUSINESS/TRADE REFERENCES",
        "agreement",
        "All invoices are to be paid 30 days from the date of the invoice.",
        "Claims arising from invoices must be made within seven working days.",
        "By submitting this application, you authorize  to make inquiries into the banking and business/trade references that you have supplied.",
        "SIGNATURES",
        "",
        "",
    ]
    assert json.dumps(structure)


def test_can_parse_document_2():
    resource = os.path.join(DIR, "documents/2.docx")

    document = parsoc.Document(resource)
    structure = parsoc.parse_document(document)

    assert structure.keys() == {"tables", "paragraphs", "properties"}
    assert structure["tables"] == []
    assert structure["paragraphs"] == [
        "\t\t\t\t\t\t\t\tCREDIT APPLICATION\t",
        "",
        "Please complete the application below by filling in the fields. If you are viewing it on the web, you should first save it to your computer using File/Save As. Fax the completed application to 323-725-6960.",
        "",
        "APPLICANT COMPANY INFORMATION",
        "Company Name:\tBourse de Londres",
        "Address:\t\t10 Paternoster Row",
        "City:\t\t\tLondon      State:   Royaume-Uni    Zip: EC4M 7LS",
        "Phone:\t\t\t+44 20 7797 1000\t\t\t   Fax:\t\t+44 20 7797 1001",
        "President/CEO:  Winston May                                          A/P Contact:  James Bonds",
        "Principal Owner Name (if not Pres/CEO):   \tGeoges Patton",
        "Principal Owner Home Address:\t\t11 Paternoster Row",
        "\t\t\t\t\t\tEC4M 7LS, Royaume-Uni",
        "Applicant Firm is:   Corporation\t Partnership\t     LLC      Proprietorship",
        "Federal Tax ID # or Social Security # if a proprietorship:   42",
        "Corporation or LLC Formed:   Gold       \t\tState of Incorporation:  Mercurial",
        "",
        "BANK REFERENCE",
        "Bank:\t\tMarc’s Bank",
        "Address:\t13 Paternoster Row",
        "City:\t\tOxford\t\t\tState:\t    Royaume-Uni\t\tZip:\tEC4M 7LS",
        "Phone:\t\t+44 20 7797 1002\t  Contact:  mike@bank.com                 \t     Account #:  12",
        "",
        "CREDIT REFERENCES",
        "Company:\t\u2002\u2002\u2002\u2002\u2002\t\t                Account #:  \u2002\u2002\u2002\u2002\u2002",
        "Address:\t\u2002\u2002\u2002\u2002\u2002",
        "City:\t\t\u2002\u2002\u2002\u2002\u2002\t\tState:\t   \u2002\u2002\u2002\t Zip:\t\u2002\u2002\u2002\u2002\u2002",
        "Phone:\t \t\u2002\u2002\u2002\u2002\u2002\t     Fax:   \u2002\u2002\u2002\u2002\u2002\t             Contact:  \u2002\u2002\u2002\u2002\u2002                 ",
        "",
        "Company:\t\u2002\u2002\u2002\u2002\u2002\t\t                Account #:  \u2002\u2002\u2002\u2002\u2002",
        "Address:\t\u2002\u2002\u2002\u2002\u2002",
        "City:\t\t\u2002\u2002\u2002\u2002\u2002\t\tState:\t   \u2002\u2002\u2002\t Zip:\t\u2002\u2002\u2002\u2002\u2002",
        "Phone:\t \t\u2002\u2002\u2002\u2002\u2002\t     Fax:   \u2002\u2002\u2002\u2002\u2002\t             Contact:  \u2002\u2002\u2002\u2002\u2002                 ",
        "",
        "Company:\t\u2002\u2002\u2002\u2002\u2002\t\t                Account #:  \u2002\u2002\u2002\u2002\u2002",
        "Address:\t\u2002\u2002\u2002\u2002\u2002",
        "City:\t\t\u2002\u2002\u2002\u2002\u2002\t\tState:\t   \u2002\u2002\u2002\t Zip:\t\u2002\u2002\u2002\u2002\u2002",
        "Phone:\t \t\u2002\u2002\u2002\u2002\u2002\t     Fax:   \u2002\u2002\u2002\u2002\u2002\t             Contact:  \u2002\u2002\u2002\u2002\u2002                 ",
        "",
        "CREDIT TERMS AND CONDITIONS",
        "Applicant warrants that the above information is true and accurate. I/we hereby authorize DeskMakers, Inc. to contact the references to investigate Applicant’s credit and financial responsibility.  I certify that on behalf of Applicant, I am familiar with the terms shown on “Terms and Conditions of Sale” page in DeskMakers’ price list, and that failure to abide by the terms and conditions shown may result in interest and/or late fees being assessed to Applicant’s account.",
        "Authorized Signature:  X  \t\t\t  Print Name:   Winston May\t\t           Date:     20190606",
    ]
    assert structure["properties"] == {
        "author": "Phil Polishook",
        "category": "",
        "comments": "",
        "content_status": "",
        "created": 1452862740.0,
        "identifier": "",
        "keywords": "",
        "language": "en-US",
        "last_modified_by": "",
        "last_printed": 1155966060.0,
        "modified": 1562946176.0,
        "revision": 5,
        "subject": "",
        "title": "Philip K",
        "version": "",
    }
    assert json.dumps(structure)


def test_can_parse_document_3():
    resource = os.path.join(DIR, "documents/3.docx")

    document = parsoc.Document(resource)
    structure = parsoc.parse_document(document)

    assert structure.keys() == {"tables", "properties", "paragraphs"}
    assert structure["tables"] == []
    assert structure["paragraphs"] == [
        "      Name of Company",
        "Address",
        "",
        "Customer Credit Application",
        "",
        "Name of applicant_____________________________________ (exact business name)",
        "      _____________________________________ (doing business as) ",
        "Dun & Bradstreet #____________________",
        "Street address__________________________________________________________________",
        "City____________________________________ State_______________ Zip Code__________",
        "Phone No.___________________ Fax No.____________________ Year established________",
        "Federal Tax ID No._________________ State Resale or Exemption No.__________________",
        "Ownership type (check one) ____ Sole Proprietor  ____ S Corporation  ___ C Corporation ____",
        "_____ Partnership  ___ Other",
        "Public Corporation _____\tPrivate Corporation _____",
        "If Corporation, state of incorporation___________ Registered to do business in MD __yes___no",
        "Date of Incorporation _____  State ____",
        " ",
        "Are you a subsidiary ___ or division ___(if yes, check which) ",
        "Parent Company Name: ______________________________________________ ",
        "Address: __________________________________________________________ ",
        "City: ______________________ State: _________________ Zip: _____________ ",
        "",
        "Will the Parent Company guarantee debts? Yes __ No __",
        " ",
        "Please indicate your company’s primary line of business: ",
        "_____ System Integrator \t____ Service Provider \t_______ VAR  ",
        "_____ Water/Power/Utility\t____ Education\t\t_______ Government ",
        "_____ Manufacturing \t\t____ Charitable Organization",
        "",
        "Requested Terms (check one) ",
        "___ Wire/Check Prepayment  ",
        "___ COD-company check \t\tAmount ____________ ",
        "___ Credit Card \t\t\tAmount ____________ ",
        "___ Net 30 days open account \tAmount ____________ ",
        "",
        "Accts Payable Contact_________________________ Phone # ________________ ",
        "Fax # __________________________ E-Mail____________________________ ",
        "",
        "Name of Controller___________________________ Phone # _______________ ",
        "Fax # __________________________ E-Mail____________________________ ",
        "",
        "Name of the CFO__________________________________________________________",
        "Fax # __________________________ E-Mail____________________________ ",
        "",
        "Registered Agent & address_______________________________________________________",
        "Web Site URL: ________________________________________________ Principal Contact's",
        "",
        "E-Mail address: ____________________________ ",
        "",
        "Has this firm ever filed for bankruptcy?  Yes __ No __ ",
        "If Yes, please attach explanation. Please provide date, docket # and resolution, if any. ",
        "",
        "",
        "Principal Owners, Stockholders, Partners, Directors &/ or Officers",
        "Name______________________ Title__________ SS#_________ Home Phone_____________",
        "Home address_______________________ City_____________ State______ Zip Code________",
        "Name______________________ Title__________ SS#_________ Home Phone_____________",
        "Home address_______________________ City_____________ State______ Zip Code________",
        "Name______________________ Title__________ SS#_________ Home Phone_____________",
        "Home address_______________________ City_____________ State______ Zip Code________",
        "Name______________________ Title__________ SS#_________ Home Phone_____________",
        "Home address_______________________ City_____________ State______ Zip Code________",
        "Name______________________ Title__________ SS#_________ Home Phone_____________",
        "Home address_______________________ City_____________ State______ Zip Code________",
        "Bank References",
        "Bank 1. _______________________ Branch_______________ Account No.________________",
        "Address______________________ Person to contact______________ Phone No.____________",
        "Bank 2_______________________ Branch_______________ Account No.________________",
        "Address______________________ Person to contact______________ Phone No.____________",
        "Credit References",
        "Creditor___________________________ Account No.________________ Year opened______",
        "Address______________________________ City___________ State_______ Zip code_______",
        "Contact person____________________________________ Phone No._____________________",
        "Creditor___________________________ Account No.________________ Year opened______",
        "Address______________________________ City___________ State_______ Zip code_______",
        "Contact person____________________________________ Phone No._____________________",
        "Creditor___________________________ Account No.________________ Year opened______",
        "Address______________________________ City___________ State_______ Zip code_______",
        "Contact person____________________________________ Phone No._____________________",
        "",
        "Purchasing Information ",
        "",
        "Does your company employ a purchase order number system?  Yes __ No __ ",
        "If Yes: .Verbal __ Written ___ ",
        "",
        "List all persons authorized to make purchases:",
        "Name:_______________________________________________ ",
        "Billing Address: _____________________________________________ ",
        "Shipping Address: _____________________________________________ ",
        "City/State: ______________________________Zip: _______________ ",
        "Phone #: __________________________________________________ ",
        "",
        "",
        "      ",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "Customer Signature: ________________________________ (Authorized Individual) ",
        "Name: ___________________________________________ ",
        "Title: ____________________________________________ ",
        "Date: ____________________________________________",
        "",
        "Companies requesting a credit line must submit copies of their financial statements for the last two years.",
        " ",
        "Please Attach:  \tCurrent Financial Statements (Balance Sheet & Income Statements)",
        "              \t\tCurrent Sales Tax Exemption Certificate Attachments ",
        "  \tCurrent signed resale certificates for all states to which you will request shipment",
    ]
    assert structure["properties"] == {
        "author": "Jim Petry",
        "category": "",
        "comments": "",
        "content_status": "",
        "created": 1452835860.0,
        "identifier": "",
        "keywords": "",
        "language": "en-US",
        "last_modified_by": "",
        "last_printed": 1150354140.0,
        "modified": 1562946686.0,
        "revision": 4,
        "subject": "",
        "title": "Security Group One, Inc",
        "version": "",
    }
    assert json.dumps(structure)
